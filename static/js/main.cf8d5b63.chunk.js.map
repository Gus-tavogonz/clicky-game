{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Counter/Counter.js","components/Wrapper/Wrapper.js","components/Navbar/Navbar.js","components/Br/Br.js","App.js","index.js"],"names":["FriendCard","React","Component","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Wrapper","children","Navbar","success","score","highScore","style","height","Br","chidren","App","state","friends","clicked","removeFriend","_this","filter","friend","setState","indexOf","handleIncrement","concat","handleReset","newScore","topScore","handleShuffle","friendsNewArray","array","i","length","j","Math","floor","random","_ref","changeFriendsArray","_this2","this","components_Wrapper_Wrapper","components_Navbar_Navbar","components_Br_Br","map","components_FriendCard_FriendCard","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cf8d5b63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FriendCard.css\";\r\nimport Counter from \"../Counter\";\r\nimport { PropTypes } from 'react'\r\n\r\nconst FriendCard = props => (\r\n  \r\n  <div className=\"card\"\r\n  value={props.id}\r\n  onClick={() => props.handleClick(props.id)}\r\n  >\r\n    <div className=\"img-container\">\r\n      <img alt={props.name} src={props.image} />\r\n    </div>\r\n    <div className=\"content\">\r\n      \r\n  \r\n    </div>\r\n  \r\n  </div>\r\n);\r\n\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass Counter extends React.Component {\n  // Setting the initial state of the Counter component\n  state = {\n    count: 0,\n    loses: 0\n  };\n\n\n  // handleIncrement increments this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  handleLoses = () => {\n    this.setState({ loses: this.state.count + 1})\n  }\n\n  // The render method returns the JSX that should be rendered\n  render() {\n    return (\n      <div className=\"card text-center\">\n        <div className=\"card-header bg-primary text-white\">\n          Score!\n        </div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">Score!: {this.state.count}</p>\n          <p className=\"card-text\">Loses!: {this.state.loses}</p>\n          <button className=\"btn btn-primary\" onClick={this.handleIncrement}>\n            Increment\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\"\r\n\r\nconst Navbar = props => (\r\n    <div className=\"container\">\r\n    <nav className=\"navbar\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-brand\"  >Home </a>\r\n      </li>\r\n      <li className=\"nav-item\">{props.success} </li>\r\n\r\n      <li className=\"nav-item\"> Score:  {props.score} </li>\r\n\r\n      <li className=\"nav-item\"> Highest Score:{props.highScore} </li>\r\n    \r\n      </ul>\r\n    </nav>\r\n    <div className=\"jumbotron\" style={{height:300}}>\r\n  \r\n  </div> \r\n   <h1 className=\"jumbo-text\">Click on an image but don't click more than once!!</h1>\r\n  </div>\r\n\r\n);\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\n\r\nconst Br = props => (\r\n  <br>{props.chidren}</br>\r\n\r\n);\r\n\r\nexport default Br;","import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport replaceFriend from \"./replaceFriends.json\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Container from \"./components/Container\";\r\nimport Counter from \"./components/Counter\";\r\nimport Br from \"./components/Br\";\r\n\r\n\r\nimport \"./App.css\";\r\n\r\nfunction changeFriendsArray(array){\r\nfor (let i = array.length -1; i > 0; i-- ){\r\n  let j = Math.floor(Math.random() * (i+1));\r\n [array [i], array [j]] = [array[j], array [i]];\r\n};\r\nreturn array;\r\n};\r\n\r\n\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    score: 0,\r\n    highScore: 0,\r\n    clicked:[],\r\n    success:\"\"\r\n  };\r\n\r\n  // state = {\r\n  //   clicked: []\r\n  // }\r\n\r\n  removeFriend = id => {\r\n    // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    const friends = this.state.friends.filter(friend => friend.id !== id);\r\n   // const clickedFriends = update(friends, {$push: [friend.id]})\r\n    // Set this.state.friends equal to the new friends array\r\n    this.setState({ friends });\r\n    // this.setStare({friends:})\r\n  };\r\n\r\n  handleClick = id => {\r\n    if (this.state.clicked.indexOf(id) === -1){\r\n      this.handleIncrement();\r\n      this.setState({clicked: this.state.clicked.concat(id) });\r\n    } else {\r\n      this.handleReset();\r\n    }\r\n  };\r\n\r\n  handleIncrement = () => {\r\n    const newScore = this.state.score + 1;\r\n    this.setState({\r\n      score: newScore,\r\n      success:\"\"\r\n    });\r\n    if (newScore >= this.state.topScore){\r\n      this.setState({topScore:newScore});\r\n    } else if (newScore=== 5){\r\n      this.setState({ success: \"Congrats!\"});\r\n    }\r\n    this.handleShuffle();\r\n  }\r\n\r\n  handleReset = () => {\r\n    this.setState({\r\n      score:0,\r\n      topScore: this.state.highScore,\r\n      success:\"Not good!\",\r\n      clicked:[]\r\n    })\r\n    this.handleShuffle();\r\n  }\r\n\r\n  handleShuffle = () => {\r\n    let friendsNewArray = changeFriendsArray(friends);\r\n    this.setState({ friends: friendsNewArray })\r\n  }\r\n  // addNewFriend = () => {\r\n  //   const replaceFriend = this\r\n  // }\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      \r\n      <Wrapper>\r\n        <Navbar\r\n        score={this.state.score}\r\n        topScore={this.state.highScore}\r\n        success={this.state.success} />\r\n\r\n        <Br />\r\n        \r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n            handleClick={this.handleClick}\r\n            handleIncrement={this.handleIncrement}\r\n            handleReset={this.handleReset}\r\n            handleShuffle={this.handleShuffle}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n           \r\n          />\r\n        ))}\r\n      \r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}